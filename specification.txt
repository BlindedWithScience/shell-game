Функционал игры:
    - Наличие аккаунтов, у каждого есть имя игрока, пароль и счёт; данные хранятся на стороне сервера.

    - Игрок может зарегистрировать новый аккаунт, имеющий указанные пользователем имя и пароль. Имя аккаунта уникально.
      Пароль и имя состоят из букв латинского алфавита и цифр. Счёт по умолчанию равен 500. Клиент получает 
      идентификатор новой сессии.

    - Игрок может войти в существующий аккаунт, указав имя аккаунта и его пароль. Клиент получает идентификатор сессии.

    - Игрок может просмотреть информацию о своём аккаунте.

    - Игрок, обладающий счётом больше 50, имеет возможность играть в напёрстки. Игра проходит следующим образом:
        - Замечание: сервер обслуживает только сессии, чьи идентификаторы хранятся в базе данных.
        - Игрок заявляет сумму, на которую он будет играть.  50 <= Сумма <= Счёт
        - Игрок выбирает число от 1 до 3. Сервер принимает запрос, содержащий угадываемое число и Сумму,
          генерирует случайное число от 1 до 3 и сравнивает их:
            - Если они совпадают, на счёт игрока начисляется Сумма и сервер сообщает клиенту об успехе;
            - Если они различаются, со счёта игрока списывается Сумма и сервер сообщает клиенту о провале.
        - Игрок получает сообщение о исходе игры и свой нынешний счёт.

    - Игрок имеет возможность посмотреть список десяти игроков с наибольшим счётом. Каждая позиция
      состоит из имени игрока и количества очков; список отсортирован в порядке убывания.

    - По выходу клиент направляет серверу сигнал о завершении сессии. Сервер удаляет сессию.


Сервер принимает следующие запросы по следующим адресам:
    - /register
        Соответствует запросу на регистрацию. Содержит словарь вида {"username": str, "password": str}.
        Возвращает в тексте ответа словарь вида str | None.

    - /login
        Соответствует запросу на вход в аккаунт. Содержит словарь вида {"username": str, "password": str}.
        Возвращает в тексте ответвида str | None.

    - /game
        Соответствует игровому запросу. Содержит словарь вида {"session_id": str, "guess": int, "stake": int}.
        Возвращает в тексте ответа True при выигрыше, False при проигрыше или отсутствии идентификатора сессии
        среди хранящихся.

    - /info
        Соответствует информационному запросу. Содержит идентификатор сессии в строчном виде.
        Возвращает в тексте ответ вида {"username": str, "score": int} | None.

    - /leaderboard
        Соответствует запросу на получение списка наилучших игроков. Ничего не содержит.
        Возвращает в тексте ответа массив словарей вида [{"username": str, "score": int},...].

    - /exit
        Соответствует сигналу о завершении сессии. Содержит идентификатор сессии в строчном виде.
        Ничего не возвращает в ответ.
        

Данные хранятся в .json файлах.
accounts.json содержит массив словарей аккаунтов вида {"username": str, "password": str, "score": int}.
